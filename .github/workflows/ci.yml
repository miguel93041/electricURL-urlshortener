name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IPINFO_API_KEY: ${{ secrets.IPINFO_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Token de autenticación para SonarQube o SonarCloud

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube \
          -Dsonar.projectKey=miguel93041_electricURL-urlshortener \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.organization=electric-urlshortenerº
      - name: Test with Gradle
        run: ./gradlew test --no-daemon
      - name: Upload test reports
        if: failure() || always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            app/build/reports/tests/test
            core/build/reports/tests/test
            delivery/build/reports/tests/test
            gateway/build/reports/tests/test
            repositories/build/reports/tests/test

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
